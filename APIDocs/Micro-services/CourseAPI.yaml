
swagger: "2.0"
info:
  description: "A micro-service approach"
  version: "0.1"
  title: "Mandatory Assignment 1"
paths:
  /course:
    post:
        tags:
          - "course"
        summary: "Add a new course to the system"
        operationId: "addCourset"
        consumes:
          - "application/json"
          - "application/xml"
        produces:
          - "application/xml"
          - "application/json"
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/Course"
        responses:
          "405":
            description: "Invalid input"
  /course/{course_id}:
    get:
      tags:
        - "course"
      summary: "Find course by ID"
      description: "Returns a single course"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "course_id"
          in: "path"
          description: "ID of course to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
            description: "Invalid ID supplied"
        "200":
          description: "success"
          schema:
              $ref: "#/definitions/Course"
    put:
      tags:
        - "course"
      summary: "Update an existing course"
      operationId: "updateCourse"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "course_id"
          in: "path"
          description: "ID of course update"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "The modified course object"
          required: true
          schema:
            $ref: "#/definitions/Course"
      responses:
        "404":
          description: "Course not found"
    delete:
      tags:
      - "course"
      summary: "Deletes a course"
      operationId: "deleteCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "course_id"
        in: "path"
        description: "Course ID to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
  /course/{course_id}/teachers:
    get:
      tags:
      - "course"
      summary: "Returns all the stored teachers teaching a course"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "course_id"
        in: "path"
        description: "ID of the course to get the teachers for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "Course not found"
        "200":
            description: "success"
            schema:
              type: "array"
              items: 
                $ref: "#/definitions/Teacher"
  /course/{course_id}/satisfaction_rating:
    get:
      tags:
        - "course"
      summary: "Returns a course's satisfaction rating by ID"
      description: "Returns an integer"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "course_id"
          in: "path"
          description: "ID of course to return the sastisfaction rating of"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
            description: "Invalid ID supplied"
        "200":
          description: "success"
          schema:
            type: "integer"
definitions:
  Course:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      teachers:
        type: "array"
        items:
          $ref: "#/definitions/Teacher"
      ects:
        type: "integer"
      satisfaction_score:
        type: "integer"
  Teacher:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      popularity_rating:
        type: "integer"
    